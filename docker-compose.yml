version: "3.8"
volumes:
  info-db-data:

services:
  info-db:
    container_name: info-db
    image: docker.io/library/postgres:12.1
    restart: always
    user: postgres
    environment:
      - TZ=Europe/Dublin
      - POSTGRES_USER=${INFO_DB_USERNAME:-admin}
      - POSTGRES_PASSWORD=${INFO_DB_PASSWORD:-Secret432}
      - POSTGRES_DB=${INFO_DB_NAME:-info}
    volumes:
      - "./local-dev/init/pg_bootstrap.sql:/docker-entrypoint-initdb.d/pg_bootstrap.sql"
      - "./info-db-data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d info"]
      interval: 10s
      timeout: 9s
      retries: 3
      start_period: 10s

  redis:
    container_name: info-redis
    image: docker.io/library/redis:latest
    user: nobody
    ports:
      - "6379:6379"

  frontend:
    container_name: info-frontend
    image: docker.io/library/alpine:latest
    user: ${DOCKER_USER:-root}
    build:
      dockerfile: frontend.Dockerfile
      context: .
      #target: build-static
      network: host
    init: true
    working_dir: /info-registry
    environment:
      npm_config_cache: /info-registry/.npm
    depends_on:
      - info-db
    entrypoint:
      - sh
      - -c
      - npm run watch

# TODO Docs
# - https://github.com/mdn/developer-portal/blob/master/docker-compose.yml
# - https://medium.com/freestoneinfotech/simplifying-docker-compose-operations-using-makefile-26d451456d63
# - https://pythonspeed.com/articles/activate-virtualenv-dockerfile/
