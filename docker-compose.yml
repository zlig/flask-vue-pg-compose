version: '3.8'

networks:
  db:
    name: db-network
    driver: bridge
  backend:
    name: backend-network
    driver: bridge

volumes:
  db-volume:
    driver: local

services:

  db:
    container_name: info-db
    image: postgres:14.1-alpine
    restart: unless-stopped
    environment:
      - TZ=Europe/Dublin
      - POSTGRES_USER=${INFO_DB_USERNAME:-admin}
      - POSTGRES_PASSWORD=${INFO_DB_PASSWORD:-Secret432}
      - POSTGRES_DB=${INFO_DB_NAME:-info}
      - PGDATA=/data/postgres
    ports:
      - '5432:5432'
    networks:
      - db
    volumes:
      - "./info-db/sql/create_tables.sql:/data/sql/create_tables.sql"
      - db-volume:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 50M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${INFO_DB_USERNAME:-admin} -d ${INFO_DB_NAME:-info}"]
      interval: 10s
      timeout: 9s
      retries: 3
      start_period: 60s

  redis:
    container_name: info-redis
    image: docker.io/library/redis:latest
    user: nobody
    ports:
      - "6379:6379"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 50M

  frontend:
    container_name: info-frontend
    image: docker.io/library/alpine:latest
    user: ${DOCKER_USER:-root}
    build:
      dockerfile: frontend.Dockerfile
      context: .
      #target: build-static
      network: host
    init: true
    ports:
      - "8081:8081"
    networks:
      - db
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 50M
    depends_on:
      - db

