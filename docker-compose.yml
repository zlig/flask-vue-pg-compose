version: "3.8"
volumes:
  info-db-data:

services:
  info-db:
    container_name: info-db
    image: docker.io/library/postgres:12.1
    user: postgres
    environment:
      - TZ=Europe/Dublin
      - POSTGRES_USER=${INFO_DB_USERNAME:-admin}
      - POSTGRES_PASSWORD=${INFO_DB_PASSWORD:-Secret432}
      - POSTGRES_DB=${INFO_DB_NAME:-info}
      - PG_DATA=/data/postgres
    volumes:
      - "./info-db-data:/data/postgres"
      - "./info-db/sql/create_tables.sql:/data/sql/create_tables.sql"
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 50M
    #healthcheck:
    #  test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
    #  interval: 10s
    #  timeout: 9s
    #  retries: 3
    #  start_period: 10s

  redis:
    container_name: info-redis
    image: docker.io/library/redis:latest
    user: nobody
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 50M

  frontend:
    container_name: info-frontend
    image: docker.io/library/alpine:latest
    user: ${DOCKER_USER:-root}
    build:
      dockerfile: frontend.Dockerfile
      context: .
      #target: build-static
      network: host
    init: true
    ports:
      - "8081:8081"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 50M
    #depends_on:
    #  - info-db

